name: CI/CD

on:
  push:
    branches: [production]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"
      - name: Notify Build Failure
        if: failure() && steps.build-push.conclusion == 'failure'
        run: echo "Build or push failed, taking recovery steps or notifying stakeholders."
      - name: Build, tag, and push auth image to Amazon ECR
        id: build-auth-image
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          REPOSITORY: auth_service
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG ./auth_service
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Build, tag, and push item image to Amazon ECR
        id: build-item-image
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          REPOSITORY: item_service
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG ./item_service
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Fill in the new image ID for auth service in the Amazon ECS task definition
        id: task-def-auth
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecom-app-task-definition-revision.json
          container-name: auth_service
          image: ${{ steps.build-auth-image.outputs.image }}
      - name: Fill in the new image ID for item service in the Amazon ECS task definition
        id: task-def-item
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecom-app-task-definition-revision.json
          container-name: item_service
          image: ${{ steps.build-item-image.outputs.image }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-auth.outputs.task-definition }}
          service: ecom-app-service
          cluster: DevCluster
          wait-for-service-stability: true
